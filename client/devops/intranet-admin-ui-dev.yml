#---
#apiVersion: v1
#kind: Namespace
#metadata:
#  name: dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: intranet-admin-ui
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: intranet-admin-ui
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: intranet-admin-ui
    spec:
      imagePullSecrets:
        - name: ecr-creds
      containers:
        - image: 126684588004.dkr.ecr.eu-central-1.amazonaws.com/intranet-admin-ui:<VERSION>
          imagePullPolicy: Always
          name: intranet-admin-ui
          ports:
            - containerPort: 80
      nodeSelector:
        eks.amazonaws.com/capacityType: ON_DEMAND
---
apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: intranet-admin-ui
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: intranet-admin-ui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: dev
  name: intranet-admin-ui
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-central-1:126684588004:certificate/e6b38141-bc04-4145-9d98-41710f90e428
    alb.ingress.kubernetes.io/group.name: non-prod
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/load-balancer-name: non-prod
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/tags: Environment=NONPROD
    alb.ingress.kubernetes.io/target-type: instance
spec:
  ingressClassName: alb
  rules:
    - host: admin-dev.immowin24.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: intranet-admin-ui
                port:
                  number: 80
